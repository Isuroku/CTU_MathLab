clear all;
load('dns_data.mat');

[labels_trn, kernel_matrix_trn] = libsvmread('trn_kernel_mat.svmlight');
[labels_val, kernel_matrix_val] = libsvmread('val_kernel_mat.svmlight');
[labels_tst, kernel_matrix_tst] = libsvmread('tst_kernel_mat.svmlight');

[sample_count, f_vec] = size( kernel_matrix_trn );

C   = [0.01, 0.1, 1, 10, 100];
c_count = length(C);

c_alpha = zeros(f_vec, c_count);
c_bias = zeros(1, c_count);
c_nSV = zeros(1, c_count);

trn_err_tables = zeros(sample_count, c_count);
mean_trn_err_tables = zeros(1, c_count);

[val_count, f_vec2] = size( kernel_matrix_val );
val_err_tables = zeros(val_count, c_count);
mean_val_err_tables = zeros(1, c_count);

for c_index = 1:c_count
    c = C(c_index);
    
    Svm = svmtrain(labels_trn, [[1:sample_count]' kernel_matrix_trn], ['-s 0 -t 4 -c ' num2str(c)] );

    % get parameters of kernel classifier
    bias             = -Svm.rho;
    alpha            = zeros(f_vec, 1);
    alpha(Svm.SVs) = Svm.sv_coef(:);
    c_alpha(:, c_index) = alpha;
    c_bias(c_index) = bias;
    c_nSV(c_index) = length(Svm.SVs);

    % predict training examples
    score_trn = kernel_matrix_trn * alpha + bias;
    pred_trn = 2*double( score_trn >= 0) - 1;
    
    % compute training error
    trn_err_tables(:,c_index) = pred_trn(:) ~= labels_trn(:);
    mean_trn_err_tables(c_index) = mean(trn_err_tables(:,c_index));
    
    % predict validaition examples
    score_val = kernel_matrix_val * alpha + bias;
    pred_val = 2*double( score_val >= 0) - 1;
    
    % compute validaition error
    val_err_tables(:,c_index) = pred_val(:) ~= labels_val(:);
    mean_val_err_tables(c_index) = mean(val_err_tables(:,c_index));
end

C_log = log(C);
figure
plot(log(C), mean_trn_err_tables);
ylim([-0.05,0.25]);
title('Graph 1')
xlabel('log(C)')
ylabel('Training error')

figure
plot(log(C), mean_val_err_tables);
title('Graph 2')
xlabel('log(C)')
ylabel('Validation error')

%Compute best constant C
[best_val, best_index] = min(mean_val_err_tables);

best_alfa = c_alpha(:, best_index);
best_bias = c_bias(best_index);

% predict test examples
score_tst = kernel_matrix_tst * best_alfa + best_bias;
pred_tst = 2*double( score_tst >= 0) - 1;

% compute test error based on best constant C
tst_err_tables = pred_tst(:) ~= labels_tst(:);
mean_tst_err_tables = mean(tst_err_tables);

%Compute min eps
DomainNameLength = 255 - 1;
NumberOfSymbols = 26 + 10 + 2;% English Alphabet + Digits + '-' + '.'
range = DomainNameLength*NumberOfSymbols;
eps = range * sqrt((log(2) - log(0.98))/(2*sample_count));



